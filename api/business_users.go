// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"

	internal "github.com/flagright/flagright-go/api/internal"
)

type BusinessUsersCreateRequest struct {
	// Boolean string whether Flagright should lock the CRA risk level for the user.
	LockCraRiskLevel *BooleanString `json:"-" url:"lockCraRiskLevel,omitempty"`
	// Boolean string whether Flagright should lock the KYC risk level for the user.
	LockKycRiskLevel *BooleanString `json:"-" url:"lockKycRiskLevel,omitempty"`
	// Boolean string whether Flagright should validate the userId
	ValidateUserId *BooleanString `json:"-" url:"validateUserId,omitempty"`
	KrsOnly        *BooleanString `json:"-" url:"_krsOnly,omitempty"`
	Body           *Business      `json:"-" url:"-"`
}

func (b *BusinessUsersCreateRequest) UnmarshalJSON(data []byte) error {
	body := new(Business)
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	b.Body = body
	return nil
}

func (b *BusinessUsersCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(b.Body)
}

// Model for business user risk score response
type BusinessUserMonitoringResult struct {
	// user ID the risk score pertains to
	UserId           string                 `json:"userId" url:"userId"`
	RiskScoreDetails *UserRiskScoreDetails  `json:"riskScoreDetails,omitempty" url:"riskScoreDetails,omitempty"`
	HitRules         []*HitRulesDetails     `json:"hitRules,omitempty" url:"hitRules,omitempty"`
	ExecutedRules    []*ExecutedRulesResult `json:"executedRules,omitempty" url:"executedRules,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (b *BusinessUserMonitoringResult) GetUserId() string {
	if b == nil {
		return ""
	}
	return b.UserId
}

func (b *BusinessUserMonitoringResult) GetRiskScoreDetails() *UserRiskScoreDetails {
	if b == nil {
		return nil
	}
	return b.RiskScoreDetails
}

func (b *BusinessUserMonitoringResult) GetHitRules() []*HitRulesDetails {
	if b == nil {
		return nil
	}
	return b.HitRules
}

func (b *BusinessUserMonitoringResult) GetExecutedRules() []*ExecutedRulesResult {
	if b == nil {
		return nil
	}
	return b.ExecutedRules
}

func (b *BusinessUserMonitoringResult) GetExtraProperties() map[string]interface{} {
	return b.extraProperties
}

func (b *BusinessUserMonitoringResult) UnmarshalJSON(data []byte) error {
	type unmarshaler BusinessUserMonitoringResult
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*b = BusinessUserMonitoringResult(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *b)
	if err != nil {
		return err
	}
	b.extraProperties = extraProperties
	b.rawJSON = json.RawMessage(data)
	return nil
}

func (b *BusinessUserMonitoringResult) String() string {
	if len(b.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(b.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(b); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", b)
}

type BusinessUsersCreateResponse struct {
	// user ID the risk score pertains to
	UserId           string                 `json:"userId" url:"userId"`
	RiskScoreDetails *UserRiskScoreDetails  `json:"riskScoreDetails,omitempty" url:"riskScoreDetails,omitempty"`
	HitRules         []*HitRulesDetails     `json:"hitRules,omitempty" url:"hitRules,omitempty"`
	ExecutedRules    []*ExecutedRulesResult `json:"executedRules,omitempty" url:"executedRules,omitempty"`
	Message          *string                `json:"message,omitempty" url:"message,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (b *BusinessUsersCreateResponse) GetUserId() string {
	if b == nil {
		return ""
	}
	return b.UserId
}

func (b *BusinessUsersCreateResponse) GetRiskScoreDetails() *UserRiskScoreDetails {
	if b == nil {
		return nil
	}
	return b.RiskScoreDetails
}

func (b *BusinessUsersCreateResponse) GetHitRules() []*HitRulesDetails {
	if b == nil {
		return nil
	}
	return b.HitRules
}

func (b *BusinessUsersCreateResponse) GetExecutedRules() []*ExecutedRulesResult {
	if b == nil {
		return nil
	}
	return b.ExecutedRules
}

func (b *BusinessUsersCreateResponse) GetMessage() *string {
	if b == nil {
		return nil
	}
	return b.Message
}

func (b *BusinessUsersCreateResponse) GetExtraProperties() map[string]interface{} {
	return b.extraProperties
}

func (b *BusinessUsersCreateResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler BusinessUsersCreateResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*b = BusinessUsersCreateResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *b)
	if err != nil {
		return err
	}
	b.extraProperties = extraProperties
	b.rawJSON = json.RawMessage(data)
	return nil
}

func (b *BusinessUsersCreateResponse) String() string {
	if len(b.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(b.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(b); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", b)
}
