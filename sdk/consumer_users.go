// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/flagright/flagright-go/sdk/internal"
)

type ConsumerUsersCreateRequest struct {
	// Boolean string whether Flagright should lock the CRA risk level for the user.
	LockCraRiskLevel *BooleanString `json:"-" url:"lockCraRiskLevel,omitempty"`
	// Boolean string whether Flagright should lock the KYC risk level for the user.
	LockKycRiskLevel *BooleanString `json:"-" url:"lockKycRiskLevel,omitempty"`
	// Boolean string whether Flagright should validate the userId
	ValidateUserId *BooleanString `json:"-" url:"validateUserId,omitempty"`
	KrsOnly        *BooleanString `json:"-" url:"_krsOnly,omitempty"`
	Body           *User          `json:"-" url:"-"`
}

func (c *ConsumerUsersCreateRequest) UnmarshalJSON(data []byte) error {
	body := new(User)
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	c.Body = body
	return nil
}

func (c *ConsumerUsersCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(c.Body)
}

// Model for consumer user risk score response
type ConsumerUserMonitoringResult struct {
	// user ID the risk score pertains to
	UserId           string                 `json:"userId" url:"userId"`
	RiskScoreDetails *UserRiskScoreDetails  `json:"riskScoreDetails,omitempty" url:"riskScoreDetails,omitempty"`
	HitRules         []*HitRulesDetails     `json:"hitRules,omitempty" url:"hitRules,omitempty"`
	ExecutedRules    []*ExecutedRulesResult `json:"executedRules,omitempty" url:"executedRules,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (c *ConsumerUserMonitoringResult) GetUserId() string {
	if c == nil {
		return ""
	}
	return c.UserId
}

func (c *ConsumerUserMonitoringResult) GetRiskScoreDetails() *UserRiskScoreDetails {
	if c == nil {
		return nil
	}
	return c.RiskScoreDetails
}

func (c *ConsumerUserMonitoringResult) GetHitRules() []*HitRulesDetails {
	if c == nil {
		return nil
	}
	return c.HitRules
}

func (c *ConsumerUserMonitoringResult) GetExecutedRules() []*ExecutedRulesResult {
	if c == nil {
		return nil
	}
	return c.ExecutedRules
}

func (c *ConsumerUserMonitoringResult) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *ConsumerUserMonitoringResult) UnmarshalJSON(data []byte) error {
	type unmarshaler ConsumerUserMonitoringResult
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = ConsumerUserMonitoringResult(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties
	c.rawJSON = json.RawMessage(data)
	return nil
}

func (c *ConsumerUserMonitoringResult) String() string {
	if len(c.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(c.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type ConsumerUsersCreateResponse struct {
	// user ID the risk score pertains to
	UserId           string                 `json:"userId" url:"userId"`
	RiskScoreDetails *UserRiskScoreDetails  `json:"riskScoreDetails,omitempty" url:"riskScoreDetails,omitempty"`
	HitRules         []*HitRulesDetails     `json:"hitRules,omitempty" url:"hitRules,omitempty"`
	ExecutedRules    []*ExecutedRulesResult `json:"executedRules,omitempty" url:"executedRules,omitempty"`
	Message          *string                `json:"message,omitempty" url:"message,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (c *ConsumerUsersCreateResponse) GetUserId() string {
	if c == nil {
		return ""
	}
	return c.UserId
}

func (c *ConsumerUsersCreateResponse) GetRiskScoreDetails() *UserRiskScoreDetails {
	if c == nil {
		return nil
	}
	return c.RiskScoreDetails
}

func (c *ConsumerUsersCreateResponse) GetHitRules() []*HitRulesDetails {
	if c == nil {
		return nil
	}
	return c.HitRules
}

func (c *ConsumerUsersCreateResponse) GetExecutedRules() []*ExecutedRulesResult {
	if c == nil {
		return nil
	}
	return c.ExecutedRules
}

func (c *ConsumerUsersCreateResponse) GetMessage() *string {
	if c == nil {
		return nil
	}
	return c.Message
}

func (c *ConsumerUsersCreateResponse) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *ConsumerUsersCreateResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ConsumerUsersCreateResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = ConsumerUsersCreateResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties
	c.rawJSON = json.RawMessage(data)
	return nil
}

func (c *ConsumerUsersCreateResponse) String() string {
	if len(c.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(c.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}
